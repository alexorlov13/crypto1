from aiogram import types
from aiogram.types import *
from aiogram.dispatcher.filters import Text
from data.config import *
from loader import dp, bot
from utils.database import *
from aiogram.dispatcher import FSMContext
from keyboards import inline_keyboards as ikb
from states.state import *


#–∑–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω—è –≤–∞–ª—é—Ç


@dp.callback_query_handler(Text(startswith='add_'))
async def add_valute(call: types.CallbackQuery, state: FSMContext):

    type_ = call.data
    type_ = type_.split('_')

    async with state.proxy() as data:
        data['type_valute'] = type_[1]
        fiat = data['type_valute']

    await AddValute.log.set()

    if call.data == 'add_crypto':        
        await call.message.edit_text('üî§ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–≤–∑–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é, –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –æ–±–º–µ–Ω–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Ä–µ–¥—Å—Ç–≤, –Ω–∞–ø—Ä–º–∏–µ—Ä:\n'
                        '–ù–∞–ø—Ä–∏–º–µ—Ä:\n'
                        'BTC 0.0003 0.1433 bc1ief9g3jfjssghguaae93j2', reply_markup=ikb.admin_menu)

    elif call.data == 'add_fiat':
        await call.message.edit_text('üî§ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–≤–∑–∞–Ω–∏–µ —Ñ–∏–∞—Ç–∞, –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é, –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –æ–±–º–µ–Ω–∞ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã\n'
                        '–ù–∞–ø—Ä–∏–º–µ—Ä:\n'
                        'RUB 1000 15000 5536914000336929', reply_markup=ikb.admin_menu)


@dp.callback_query_handler(Text(startswith='back_to_admin'))
async def back_to_admin_func(call: types.CallbackQuery):

    await call.message.edit_text('üíª –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', reply_markup=ikb.admin_panel_key)


@dp.message_handler(state=AddValute.log)
async def add_valute_to_db(msg: types.Message, state: FSMContext):

    message = msg.text
    message = message.split(' ')

    async with state.proxy() as data:
        type_valute = data['type_valute']

    await state.finish()

    if len(message) == 4:        
        with DB() as db:
            req = db.add_valute(valute=message[0], type=type_valute, min=message[1], max=message[2], requisite=message[3])

        if req:
            await msg.answer('‚úÖ –í–∞–ª—é—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É', reply_markup=ikb.admin_panel_key)

        else:
            await msg.answer('‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö', reply_markup=ikb.admin_panel_key)

    else:
        await msg.answer('‚ùóÔ∏è –§–æ—Ä–º–∞—Ç –ª–æ–≥–∞ –≤–≤–µ–¥–µ–Ω—ã–π –í–∞–º–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª–µ–Ω!', reply_markup=ikb.admin_panel_key)